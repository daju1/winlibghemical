diff -Nur ./libghemical-3.0.0.original/src/eng1_mm_default.cpp ./libghemical-3.0.0/src/eng1_mm_default.cpp
--- ./libghemical-3.0.0.original/src/eng1_mm_default.cpp	2020-09-04 07:18:08.499183792 +0000
+++ ./libghemical-3.0.0/src/eng1_mm_default.cpp	2020-09-04 07:08:50.507195372 +0000
@@ -1455,25 +1455,53 @@
 	if (t2a < -box_HALFdim[n2])
 	{
 		t2a += 2.0 * box_HALFdim[n2];
-		if (t2a < -box_HALFdim[n2]) assertion_failed(__FILE__, __LINE__, "PBC failed ; a-");
+		if (t2a < -box_HALFdim[n2]) 
+		{
+			ostringstream str;
+			str << _("FATAL : t2a ") << t2a << _(" -box_HALFdim[" ) << n2 << _("] ") << -box_HALFdim[n2] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; a-");
+		}
 	}
 	else if (t2a > +box_HALFdim[n2])
 	{
 		t2a -= 2.0 * box_HALFdim[n2];
-		if (t2a > +box_HALFdim[n2]) assertion_failed(__FILE__, __LINE__, "PBC failed ; a+");
+		if (t2a > +box_HALFdim[n2])
+		{
+			ostringstream str;
+			str << _("FATAL : t2a ") << t2a << _(" +box_HALFdim[" ) << n2 << _("] ") << +box_HALFdim[n2] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; a+");
+		}
 	}
-			
+		
 			f64 t2b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			// ^^^^^ either at primary cell OR at 1st neighbor cell (1 of 26).
 	if (t2b < -box_HALFdim[n2])
 	{
 		t2b += 2.0 * box_HALFdim[n2];
-		if (t2b < -box_HALFdim[n2]) assertion_failed(__FILE__, __LINE__, "PBC failed ; b-");
+		if (t2b < -box_HALFdim[n2])
+		{
+			ostringstream str;
+			str << _("FATAL : t2b ") << t2b << _(" -box_HALFdim[" ) << n2 << _("] ") << -box_HALFdim[n2] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; b-");
+		}
 	}
 	else if (t2b > +box_HALFdim[n2])
 	{
 		t2b -= 2.0 * box_HALFdim[n2];
-		if (t2b > +box_HALFdim[n2]) assertion_failed(__FILE__, __LINE__, "PBC failed ; b+");
+		if (t2b > +box_HALFdim[n2])
+		{
+			ostringstream str;
+			str << _("FATAL : t2b ") << t2b << _(" +box_HALFdim[" ) << n2 << _("] ") << +box_HALFdim[n2] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; b+");
+		}
 	}
 			
 			t1a[n2] = t2a - t2b;
@@ -1639,12 +1667,26 @@
 	if (t2a < -box_HALFdim[n1])
 	{
 		t2a += 2.0 * box_HALFdim[n1];
-		if (t2a < -box_HALFdim[n1]) assertion_failed(__FILE__, __LINE__, "PBC failed ; a-");
+		if (t2a < -box_HALFdim[n1]) 
+		{
+			ostringstream str;
+			str << _("FATAL : t2a ") << t2a << _(" -box_HALFdim[" ) << n1 << _("] ") << -box_HALFdim[n1] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; a-");
+		}
 	}
 	else if (t2a > +box_HALFdim[n1])
 	{
 		t2a -= 2.0 * box_HALFdim[n1];
-		if (t2a > +box_HALFdim[n1]) assertion_failed(__FILE__, __LINE__, "PBC failed ; a+");
+		if (t2a > +box_HALFdim[n1])
+		{
+			ostringstream str;
+			str << _("FATAL : t2a ") << t2a << _(" +box_HALFdim[" ) << n1 << _("] ") << +box_HALFdim[n1] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; a+");
+		}
 	}
 					
 					f64 t2b = crd[l2g_mm[ind2] * 3 + n1];
@@ -1652,12 +1694,26 @@
 	if (t2b < -box_HALFdim[n1])
 	{
 		t2b += 2.0 * box_HALFdim[n1];
-		if (t2b < -box_HALFdim[n1]) assertion_failed(__FILE__, __LINE__, "PBC failed ; b-");
+		if (t2b < -box_HALFdim[n1])
+		{
+			ostringstream str;
+			str << _("FATAL : t2b ") << t2b << _(" -box_HALFdim[" ) << n1 << _("] ") << -box_HALFdim[n1] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; b-");
+		}
 	}
 	else if (t2b > +box_HALFdim[n1])
 	{
 		t2b -= 2.0 * box_HALFdim[n1];
-		if (t2b > +box_HALFdim[n1]) assertion_failed(__FILE__, __LINE__, "PBC failed ; b+");
+		if (t2b > +box_HALFdim[n1])
+		{
+			ostringstream str;
+			str << _("FATAL : t2b ") << t2b << _(" +box_HALFdim[" ) << n1 << _("] ") << +box_HALFdim[n1] << endl << ends;
+			GetSetup()->GetModel()->PrintToLog(str.str().c_str());
+
+			assertion_failed(__FILE__, __LINE__, "PBC failed ; b+");
+		}
 	}
 					
 					t1a = t2a - t2b;
