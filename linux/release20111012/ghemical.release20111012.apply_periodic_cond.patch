diff -Nur ./libghemical-3.0.0.original/src/eng1_mm_default.cpp ./libghemical-3.0.0/src/eng1_mm_default.cpp
--- ./libghemical-3.0.0.original/src/eng1_mm_default.cpp	2020-09-09 10:39:02.447137723 +0000
+++ ./libghemical-3.0.0/src/eng1_mm_default.cpp	2020-09-09 09:43:26.735225278 +0000
@@ -664,6 +664,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
@@ -1264,6 +1265,7 @@
 				f64 t9b = crd[l2g_mm[n1] * 3 + n2];
 				
 				t1a[n2] = t9a - t9b;
+				GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 				t1b += t1a[n2] * t1a[n2];
 			}
 			
diff -Nur ./libghemical-3.0.0.original/src/eng1_mm_prmfit.cpp ./libghemical-3.0.0/src/eng1_mm_prmfit.cpp
--- ./libghemical-3.0.0.original/src/eng1_mm_prmfit.cpp	2020-09-09 10:39:02.315137727 +0000
+++ ./libghemical-3.0.0/src/eng1_mm_prmfit.cpp	2020-09-09 09:43:38.439224971 +0000
@@ -702,6 +702,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
diff -Nur ./libghemical-3.0.0.original/src/eng1_mm_tripos52.cpp ./libghemical-3.0.0/src/eng1_mm_tripos52.cpp
--- ./libghemical-3.0.0.original/src/eng1_mm_tripos52.cpp	2020-09-09 10:39:02.315137727 +0000
+++ ./libghemical-3.0.0/src/eng1_mm_tripos52.cpp	2020-09-09 09:44:06.687224230 +0000
@@ -466,6 +466,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
@@ -522,6 +523,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
@@ -963,6 +965,8 @@
 				f64 t9b = crd[l2g_mm[n1] * 3 + n2];
 				
 				t1a[n2] = t9a - t9b;
+				GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
+
 				t1b += t1a[n2] * t1a[n2];
 			}
 			
diff -Nur ./libghemical-3.0.0.original/src/eng1_sf.cpp ./libghemical-3.0.0/src/eng1_sf.cpp
--- ./libghemical-3.0.0.original/src/eng1_sf.cpp	2020-09-09 10:39:02.315137727 +0000
+++ ./libghemical-3.0.0/src/eng1_sf.cpp	2020-09-09 09:44:23.191223796 +0000
@@ -3129,6 +3129,7 @@
 			f64 t9b = crd[l2g_sf[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
@@ -3954,6 +3955,7 @@
 				f64 t9b = crd[l2g_sf[n1] * 3 + n2];
 				
 				t1a[n2] = t9a - t9b;
+				GetSetup()->GetModel()->apply_periodic_cond(this, t1a[n2], n2);
 				t1b += t1a[n2] * t1a[n2];
 			}
 			
diff -Nur ./libghemical-3.0.0.original/src/model.cpp ./libghemical-3.0.0/src/model.cpp
--- ./libghemical-3.0.0.original/src/model.cpp	2020-09-09 10:39:02.451137723 +0000
+++ ./libghemical-3.0.0/src/model.cpp	2020-09-09 09:46:34.791220342 +0000
@@ -342,6 +342,26 @@
 	return result;
 }
 
+void model::apply_periodic_cond(engine * eng, f64 & t1a_n2, i32s n2) const
+{
+	// eng_pbc != NULL if we will use a system with periodic boundary conditions...
+	engine_pbc * eng_pbc = dynamic_cast<engine_pbc *>(eng);
+
+	if (use_periodic_boundary_conditions && NULL != eng_pbc)
+	{
+		//######################################################################
+		if (t1a_n2 < -eng_pbc->box_HALFdim[n2])
+		{
+			t1a_n2 += 2.0 * eng_pbc->box_HALFdim[n2];
+		}
+		else if (t1a_n2 > +eng_pbc->box_HALFdim[n2])
+		{
+			t1a_n2 -= 2.0 * eng_pbc->box_HALFdim[n2];
+		}
+		//######################################################################
+	}
+}
+
 void model::DiscardCurrEng(void)
 {
 //	cout << "discard!!!" << endl;
@@ -3055,7 +3075,7 @@
 		if (n1 >= param.nsteps_h + param.nsteps_e + param.nsteps_s) enable_Pc = false;	// cooling
 
 #if USE_BOUNDARY_OPT_ON_MOLDYN
-		if (b_opt && param.box_optimization && 1 == (n1 % 10)){
+		if (b_opt && param.box_optimization && 0 == (n1 % 10)){
 			b_opt->TakeCGStep(conjugate_gradient::Newton2An);
 			if (eng_pbc != NULL)
 			{
diff -Nur ./libghemical-3.0.0.original/src/model.h ./libghemical-3.0.0/src/model.h
--- ./libghemical-3.0.0.original/src/model.h	2020-09-09 10:39:02.451137723 +0000
+++ ./libghemical-3.0.0/src/model.h	2020-09-09 09:42:44.823226378 +0000
@@ -216,7 +216,9 @@
 
     void SaveBox(const char * boxfilename);
     bool LoadBox(const char * boxfilename);
-	
+
+    void apply_periodic_cond(engine * eng, f64 & t1a_n2, i32s n2) const;
+
 // what to do for this one???
 // what to do for this one???
 // what to do for this one???
