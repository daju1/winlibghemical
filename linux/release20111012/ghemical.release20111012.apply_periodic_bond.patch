diff -Nur ./libghemical-3.0.0/src/eng1_mm_default.cpp ./libghemical-3.0.0.apply_bond/src/eng1_mm_default.cpp
--- ./libghemical-3.0.0/src/eng1_mm_default.cpp	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/eng1_mm_default.cpp	2019-10-01 14:00:45.000000000 +0300
@@ -664,6 +664,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_bond(t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
 					
diff -Nur ./libghemical-3.0.0/src/eng1_mm_prmfit.cpp ./libghemical-3.0.0.apply_bond/src/eng1_mm_prmfit.cpp
--- ./libghemical-3.0.0/src/eng1_mm_prmfit.cpp	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/eng1_mm_prmfit.cpp	2019-10-01 14:00:57.000000000 +0300
@@ -702,6 +702,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_bond(t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
diff -Nur ./libghemical-3.0.0/src/eng1_mm_tripos52.cpp ./libghemical-3.0.0.apply_bond/src/eng1_mm_tripos52.cpp
--- ./libghemical-3.0.0/src/eng1_mm_tripos52.cpp	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/eng1_mm_tripos52.cpp	2019-10-01 14:01:30.000000000 +0300
@@ -466,6 +466,7 @@
 			f64 t9b = crd[l2g_mm[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_bond(t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		
diff -Nur ./libghemical-3.0.0/src/eng1_sf.cpp ./libghemical-3.0.0.apply_bond/src/eng1_sf.cpp
--- ./libghemical-3.0.0/src/eng1_sf.cpp	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/eng1_sf.cpp	2019-10-01 14:01:33.000000000 +0300
@@ -3129,6 +3129,7 @@
 			f64 t9b = crd[l2g_sf[atmi[1]] * 3 + n2];
 			
 			t1a[n2] = t9a - t9b;
+			GetSetup()->GetModel()->apply_periodic_bond(t1a[n2], n2);
 			t1b += t1a[n2] * t1a[n2];
 		}
 		

diff -Nur ./libghemical-3.0.0/src/model.cpp ./libghemical-3.0.0.apply_bond/src/model.cpp
--- ./libghemical-3.0.0/src/model.cpp	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/model.cpp	2019-10-01 13:59:36.000000000 +0300
@@ -51,6 +51,7 @@
 #include <cstring>
 #include <iomanip>
 #include <sstream>
+#include <strstream>
 using namespace std;
 
 #ifdef WIN32
@@ -290,6 +291,82 @@
 	exit(EXIT_FAILURE);
 }
 
+
+void model::SaveBox(const char * boxfilename)
+{
+	char mbuff1[256];
+	ofstream boxfile;
+	boxfile.open(boxfilename, ios::out);
+	ostrstream str3b(mbuff1, sizeof(mbuff1));
+	str3b << this->saved_periodic_box_HALFdim[0] << " ";
+	str3b << this->saved_periodic_box_HALFdim[1] << " ";
+	str3b << this->saved_periodic_box_HALFdim[2] << endl << ends;
+	boxfile << mbuff1;
+	boxfile.close();
+}
+
+bool model::LoadBox(const char * boxfilename)
+{
+	const int n = 1024;
+	char szBuff[n];
+	bool result = false;
+	FILE * stream;
+	stream = fopen(boxfilename, "rt");
+	if(stream)
+	{
+		if (!feof(stream))
+		{
+			char * ch;
+			ch = fgets(szBuff,n,stream);
+			if( ch != NULL && strlen(szBuff) > 1)
+			{
+				f64	box0, box1, box2;
+				if (3 == sscanf(szBuff, "%lf %lf %lf", 
+					&box0, 
+					&box1, 
+					&box2)) 
+				{
+					printf("box = [%f %f %f]\n", box0, box1, box2);
+
+					this->saved_periodic_box_HALFdim[0] = box0;
+					this->saved_periodic_box_HALFdim[1] = box1;
+					this->saved_periodic_box_HALFdim[2] = box2;
+					result = true;
+				}
+			}
+		}
+		fclose(stream);
+	}
+	return result;
+}
+
+bool model::get_use_periodic_boundary_conditions() const
+{
+
+}
+
+f64 model::get_saved_periodic_box_HALFdim(i32s n2) const
+{
+
+}
+
+void model::apply_periodic_bond(f64 & t1a_n2, i32s n2) const
+{
+	if (use_periodic_boundary_conditions)
+	{
+		//######################################################################
+		if (t1a_n2 < -saved_periodic_box_HALFdim[n2])
+		{
+			t1a_n2 += 2.0 * saved_periodic_box_HALFdim[n2];
+		}
+		else if (t1a_n2 > +saved_periodic_box_HALFdim[n2])
+		{
+			t1a_n2 -= 2.0 * saved_periodic_box_HALFdim[n2];
+		}
+		//######################################################################
+	}
+}
+
 void model::DiscardCurrEng(void)
 {
 //	cout << "discard!!!" << endl;
diff -Nur ./libghemical-3.0.0/src/model.h ./libghemical-3.0.0.apply_bond/src/model.h
--- ./libghemical-3.0.0/src/model.h	2019-10-01 14:23:39.000000000 +0300
+++ ./libghemical-3.0.0.apply_bond/src/model.h	2019-10-01 13:59:26.000000000 +0300
@@ -209,7 +209,15 @@
 	void DestroyRS(void);
 	
 	static void OpenLibDataFile(ifstream &, bool, const char *);
+
+    void SaveBox(const char * boxfilename);
+    bool LoadBox(const char * boxfilename);
 	
+    bool get_use_periodic_boundary_conditions() const;
+    f64 get_saved_periodic_box_HALFdim(i32s n2) const;
+
+    void apply_periodic_bond(f64 & t1a_n2, i32s n2) const;
+
 // what to do for this one???
 // what to do for this one???
 // what to do for this one???
